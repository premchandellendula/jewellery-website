// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id    @default(autoincrement())
  email       String        @unique
  name        String  
  password    String
  role        Role          @default(USER)
  cart        Cart[]
  contactInfo ContactInfo?
  addresses   Address[]
  orders      Order[]     
}

model Product {
  id           Int       @id    @default(autoincrement())
  name         String
  description  String
  price        Float
  imageUrl     String
  categoryId   Int
  category     Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  cartItems    Cart[] 
  orderItems   OrderItem[]
}

model Category {
  id        Int      @id  @default(autoincrement())
  name      String   @unique
  imageUrl  String
  products  Product[]
}

model Works {
  id           Int       @id    @default(autoincrement())
  name         String 
  description  String
  price        Float
  imageUrl     String
  createdAt    DateTime  @default(now())
}

model Gallery {
  id           Int       @id    @default(autoincrement())
  name         String
  imageUrl     String
  createdAt    DateTime  @default(now())
}

model Cart {
  id          Int     @id   @default(autoincrement())
  userId      Int
  productId   Int
  name        String
  description String
  price       Float
  imageUrl    String
  quantity    Int      @default(1)
  user        User     @relation(fields: [userId], references: [id])
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ContactInfo {
  id                    Int     @id   @default(autoincrement())
  phoneNumber           String  
  alternatePhoneNumber  String? 
  userId                Int     @unique
  user                  User    @relation(fields: [userId], references: [id])
}

model Address {
  id            Int       @id   @default(autoincrement())
  flat          String
  street        String
  city          String
  state         String
  zipCode       String
  country       String
  userId        Int
  user          User      @relation(fields: [userId], references: [id])
}

model Order {
  id            Int            @id    @default(autoincrement())
  userId        Int
  totalAmount   Float
  status        OrderStatus    @default(PENDING)
  createAt      DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  user          User           @relation(fields: [userId], references: [id])
  orderItems    OrderItem[]
}

model OrderItem {
  id            Int             @id    @default(autoincrement())
  orderId       Int
  productId     Int
  quantity      Int             @default(1)
  price         Float
  order         Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product       Product         @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED

}

enum Role {
  ADMIN
  USER
}
